<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xdj.interfaces.mallinterface.mapper.ShoppingMessageMapper">
  <resultMap id="BaseResultMap" type="com.xdj.www.entity.ShoppingMessage">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="addTime" jdbcType="TIMESTAMP" property="addtime" />
    <result column="deleteStatus" jdbcType="BIT" property="deletestatus" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="fromUser_id" jdbcType="BIGINT" property="fromuserId" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="toUser_id" jdbcType="BIGINT" property="touserId" />
    <result column="reply_status" jdbcType="INTEGER" property="replyStatus" />
    <association property="fromUser" javaType="com.xdj.www.entity.ShoppingUser" column="fromUser_id" select="com.xdj.interfaces.mallinterface.mapper.ShoppingUserMapper.selectByPrimaryKey"></association>
    <association property="toUser" javaType="com.xdj.www.entity.ShoppingUser" column="toUser_id" select="com.xdj.interfaces.mallinterface.mapper.ShoppingUserMapper.selectByPrimaryKey"></association>
    <association property="parent" javaType="com.xdj.www.entity.ShoppingMessage" column="parent_id" select="selectByPrimaryKey"></association>
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xdj.www.entity.ShoppingMessage">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, addTime, deleteStatus, status, title, type, fromUser_id, parent_id, toUser_id,
    reply_status
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>

  <select id="queryByCondition" resultMap="ResultMapWithBLOBs" >
     select * from shopping_message
     <where >
       1=1
       <if test="from_user_id!=null">and fromUser_id =#{from_user_id}</if>
       <if test="to_user_id!=null"> and toUser_id =#{to_user_id}</if>
       <if test="status != null ">  and status=#{status}</if>
       <if test="status1 != null ">  or status=#{status1}</if>
       <if test="type != null ">  and `type`=#{type}</if>
       <if test="reply_status" > and reply_status=#{reply_status}</if>
       <if test="parent_id != null"> and parent_id ${parent_id}</if>
       <if test="orderBy != null and sort != null "> order by ${orderBy} ${sort}</if>
       <if test="start != null and pageSize != null"> limit #{start},#{pageSize}</if>
     </where>
  </select>

  <select id="count" resultType="java.lang.Integer">
    select  count(*) from shopping_message
    <where>
      1=1
      <if test="from_user_id!=null">and fromUser_id =#{from_user_id}</if>
      <if test="to_user_id!=null"> and toUser_id =#{to_user_id}</if>
      <if test="status != null ">  and status=#{status}</if>
      <if test="status1 != null ">  or status=#{status1}</if>
      <if test="type != null ">  and `type`=#{type}</if>
      <if test="reply_status" > and reply_status=#{reply_status}</if>
      <if test="parent_id != null"> and parent_id ${parent_id}</if>
    </where>
  </select>


  <select id="selectByExampleWithBLOBs" parameterType="com.xdj.www.entity.ShoppingMessageExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from shopping_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.xdj.www.entity.ShoppingMessageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shopping_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from shopping_message
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from shopping_message
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xdj.www.entity.ShoppingMessageExample">
    delete from shopping_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xdj.www.entity.ShoppingMessage">
    insert into shopping_message (id, addTime, deleteStatus,
      status, title, type,
      fromUser_id, parent_id, toUser_id,
      reply_status, content)
    values (#{id,jdbcType=BIGINT}, #{addtime,jdbcType=TIMESTAMP}, #{deletestatus,jdbcType=BIT},
      #{status,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER},
      #{fromuserId,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, #{touserId,jdbcType=BIGINT},
      #{replyStatus,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xdj.www.entity.ShoppingMessage">
    insert into shopping_message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="addtime != null">
        addTime,
      </if>
      <if test="deletestatus != null">
        deleteStatus,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="fromuserId != null">
        fromUser_id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="touserId != null">
        toUser_id,
      </if>
      <if test="replyStatus != null">
        reply_status,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="addtime != null">
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="deletestatus != null">
        #{deletestatus,jdbcType=BIT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="fromuserId != null">
        #{fromuserId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="touserId != null">
        #{touserId,jdbcType=BIGINT},
      </if>
      <if test="replyStatus != null">
        #{replyStatus,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xdj.www.entity.ShoppingMessageExample" resultType="java.lang.Long">
    select count(*) from shopping_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update shopping_message
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.addtime != null">
        addTime = #{record.addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deletestatus != null">
        deleteStatus = #{record.deletestatus,jdbcType=BIT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.fromuserId != null">
        fromUser_id = #{record.fromuserId,jdbcType=BIGINT},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.touserId != null">
        toUser_id = #{record.touserId,jdbcType=BIGINT},
      </if>
      <if test="record.replyStatus != null">
        reply_status = #{record.replyStatus,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update shopping_message
    set id = #{record.id,jdbcType=BIGINT},
      addTime = #{record.addtime,jdbcType=TIMESTAMP},
      deleteStatus = #{record.deletestatus,jdbcType=BIT},
      status = #{record.status,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      fromUser_id = #{record.fromuserId,jdbcType=BIGINT},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      toUser_id = #{record.touserId,jdbcType=BIGINT},
      reply_status = #{record.replyStatus,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update shopping_message
    set id = #{record.id,jdbcType=BIGINT},
      addTime = #{record.addtime,jdbcType=TIMESTAMP},
      deleteStatus = #{record.deletestatus,jdbcType=BIT},
      status = #{record.status,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      fromUser_id = #{record.fromuserId,jdbcType=BIGINT},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      toUser_id = #{record.touserId,jdbcType=BIGINT},
      reply_status = #{record.replyStatus,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xdj.www.entity.ShoppingMessage">
    update shopping_message
    <set>
      <if test="addtime != null">
        addTime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="deletestatus != null">
        deleteStatus = #{deletestatus,jdbcType=BIT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="fromuserId != null">
        fromUser_id = #{fromuserId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="touserId != null">
        toUser_id = #{touserId,jdbcType=BIGINT},
      </if>
      <if test="replyStatus != null">
        reply_status = #{replyStatus,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xdj.www.entity.ShoppingMessage">
    update shopping_message
    set addTime = #{addtime,jdbcType=TIMESTAMP},
      deleteStatus = #{deletestatus,jdbcType=BIT},
      status = #{status,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      fromUser_id = #{fromuserId,jdbcType=BIGINT},
      parent_id = #{parentId,jdbcType=BIGINT},
      toUser_id = #{touserId,jdbcType=BIGINT},
      reply_status = #{replyStatus,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xdj.www.entity.ShoppingMessage">
    update shopping_message
    set addTime = #{addtime,jdbcType=TIMESTAMP},
      deleteStatus = #{deletestatus,jdbcType=BIT},
      status = #{status,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      fromUser_id = #{fromuserId,jdbcType=BIGINT},
      parent_id = #{parentId,jdbcType=BIGINT},
      toUser_id = #{touserId,jdbcType=BIGINT},
      reply_status = #{replyStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>
