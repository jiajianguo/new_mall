<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xdj.interfaces.mallinterface.mapper.ShoppingAccessoryMapper">
  <resultMap id="BaseResultMap" type="com.xdj.www.entity.ShoppingAccessory">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="addTime" jdbcType="TIMESTAMP" property="addtime" />
    <result column="deleteStatus" jdbcType="BIT" property="deletestatus" />
    <result column="ext" jdbcType="VARCHAR" property="ext" />
    <result column="height" jdbcType="INTEGER" property="height" />
    <result column="info" jdbcType="VARCHAR" property="info" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="size" jdbcType="REAL" property="size" />
    <result column="width" jdbcType="INTEGER" property="width" />
    <result column="album_id" jdbcType="BIGINT" property="albumId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="config_id" jdbcType="BIGINT" property="configId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, addTime, deleteStatus, ext, height, info, name, path, size, width, album_id,
    user_id, config_id
  </sql>

  <select id="queryByGoodsId"   resultMap="BaseResultMap">
     select * from shopping_accessory acc
     left join shopping_goods_photo p on p.photo_id = acc.id

     <where>
        1=1
        <if test="goods_id != null "> and p.goods_id = #{goods_id} </if>
      </where>
  </select>

  <select id="queryByCondition" resultMap="BaseResultMap">
    select * from shopping_accessory
    <where>
      1=1
      <if test="config_id != null "> and config_id =#{config_id}</if>
    </where>
  </select>

  <select id="selectByExample" parameterType="com.xdj.www.entity.ShoppingAccessoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shopping_accessory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from shopping_accessory
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from shopping_accessory
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xdj.www.entity.ShoppingAccessoryExample">
    delete from shopping_accessory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xdj.www.entity.ShoppingAccessory">
    insert into shopping_accessory (id, addTime, deleteStatus,
      ext, height, info,
      name, path, size, width,
      album_id, user_id, config_id
      )
    values (#{id,jdbcType=BIGINT}, #{addtime,jdbcType=TIMESTAMP}, #{deletestatus,jdbcType=BIT},
      #{ext,jdbcType=VARCHAR}, #{height,jdbcType=INTEGER}, #{info,jdbcType=VARCHAR},
      #{name,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, #{size,jdbcType=REAL}, #{width,jdbcType=INTEGER},
      #{albumId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{configId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xdj.www.entity.ShoppingAccessory" useGeneratedKeys="true" keyColumn="id" keyProperty="id" >
    insert into shopping_accessory
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="addtime != null">
        addTime,
      </if>
      <if test="deletestatus != null">
        deleteStatus,
      </if>
      <if test="ext != null">
        ext,
      </if>
      <if test="height != null">
        height,
      </if>
      <if test="info != null">
        info,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="path != null">
        path,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="width != null">
        width,
      </if>
      <if test="albumId != null">
        album_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="configId != null">
        config_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="addtime != null">
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="deletestatus != null">
        #{deletestatus,jdbcType=BIT},
      </if>
      <if test="ext != null">
        #{ext,jdbcType=VARCHAR},
      </if>
      <if test="height != null">
        #{height,jdbcType=INTEGER},
      </if>
      <if test="info != null">
        #{info,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        #{size,jdbcType=REAL},
      </if>
      <if test="width != null">
        #{width,jdbcType=INTEGER},
      </if>
      <if test="albumId != null">
        #{albumId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="configId != null">
        #{configId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>

  <select id="countByExample" parameterType="com.xdj.www.entity.ShoppingAccessoryExample" resultType="java.lang.Long">
    select count(*) from shopping_accessory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update shopping_accessory
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.addtime != null">
        addTime = #{record.addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deletestatus != null">
        deleteStatus = #{record.deletestatus,jdbcType=BIT},
      </if>
      <if test="record.ext != null">
        ext = #{record.ext,jdbcType=VARCHAR},
      </if>
      <if test="record.height != null">
        height = #{record.height,jdbcType=INTEGER},
      </if>
      <if test="record.info != null">
        info = #{record.info,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.path != null">
        path = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.size != null">
        size = #{record.size,jdbcType=REAL},
      </if>
      <if test="record.width != null">
        width = #{record.width,jdbcType=INTEGER},
      </if>
      <if test="record.albumId != null">
        album_id = #{record.albumId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.configId != null">
        config_id = #{record.configId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update shopping_accessory
    set id = #{record.id,jdbcType=BIGINT},
      addTime = #{record.addtime,jdbcType=TIMESTAMP},
      deleteStatus = #{record.deletestatus,jdbcType=BIT},
      ext = #{record.ext,jdbcType=VARCHAR},
      height = #{record.height,jdbcType=INTEGER},
      info = #{record.info,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      path = #{record.path,jdbcType=VARCHAR},
      size = #{record.size,jdbcType=REAL},
      width = #{record.width,jdbcType=INTEGER},
      album_id = #{record.albumId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      config_id = #{record.configId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xdj.www.entity.ShoppingAccessory">
    update shopping_accessory
    <set>
      <if test="addtime != null">
        addTime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="deletestatus != null">
        deleteStatus = #{deletestatus,jdbcType=BIT},
      </if>
      <if test="ext != null">
        ext = #{ext,jdbcType=VARCHAR},
      </if>
      <if test="height != null">
        height = #{height,jdbcType=INTEGER},
      </if>
      <if test="info != null">
        info = #{info,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        size = #{size,jdbcType=REAL},
      </if>
      <if test="width != null">
        width = #{width,jdbcType=INTEGER},
      </if>
      <if test="albumId != null">
        album_id = #{albumId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="configId != null">
        config_id = #{configId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xdj.www.entity.ShoppingAccessory">
    update shopping_accessory
    set addTime = #{addtime,jdbcType=TIMESTAMP},
      deleteStatus = #{deletestatus,jdbcType=BIT},
      ext = #{ext,jdbcType=VARCHAR},
      height = #{height,jdbcType=INTEGER},
      info = #{info,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      size = #{size,jdbcType=REAL},
      width = #{width,jdbcType=INTEGER},
      album_id = #{albumId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      config_id = #{configId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>
